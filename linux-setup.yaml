---
- name: Provision basic host
  hosts: localhost
  become: true
  gather_facts: true

  vars:
    shell_users:
      - login: "cosmond"
        pass_hash: ""
        pubkeys:
          - "sk-ssh-ed25519@openssh.com AAAAGnNrLXNzaC1lZDI1NTE5QG9wZW5zc2guY29tAAAAIDUHfFVjcZQLXQbLhhZ5w0QzsGE/haDrJc4YytGFDGC4AAAABHNzaDo="
          - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJUkpUmHRuVtr866xYO+z3Unnz19EgRhyWxFrY2jnuwB"
          - "sk-ssh-ed25519@openssh.com AAAAGnNrLXNzaC1lZDI1NTE5QG9wZW5zc2guY29tAAAAIH+Wwha4aKgm1V/YvsRlWBSuiTnIRhdP58/uKFwixhMMAAAAC3NzaDpjb3Ntb25k"  
        rcurl: "https://raw.githubusercontent.com/chadosmond/chadosmond/main/.zshrc"
        shell: "zsh"
        name: "Chad Osmond"
        email: "chad.osmond@smarterit.ca"

    sysctl_settings:
      net.ipv4.ip_forward: 0
      net.ipv4.conf.all.accept_redirects: 0
      net.ipv4.conf.all.send_redirects: 0
      net.ipv4.conf.all.accept_source_route: 0
      net.ipv4.icmp_echo_ignore_broadcasts: 1
      net.ipv4.icmp_ignore_bogus_error_responses: 1
      net.ipv4.conf.default.rp_filter: 1
      net.ipv4.conf.all.log_martians: 1
      net.ipv6.conf.all.disable_ipv6: 1
      net.ipv6.conf.default.disable_ipv6: 1

  tasks:
    ########################################################################
    # 1. User Setup
    ########################################################################
    - name: Ensure the user exists
      user:
        name: "{{ item.login }}"
        state: present
        password: "{{ item.pass_hash }}"
        shell: "/usr/bin/{{ item.shell }}"
      with_items: "{{ shell_users }}"

    - name: Ensure authorized_keys file for user has the correct key
      authorized_key:
        user: "{{ item.login }}"
        key: "{% for key in item.pubkeys %}{{ key ~ '\n' }}{% endfor %}"
      with_items: "{{ shell_users }}"

    - name: Download rc file for User
      get_url:
        url: "{{ item.rcurl }}"
        dest: "/home/{{ item.login }}/.{{ item.shell }}rc"
        owner: "{{ item.login }}"
        group: "{{ item.login }}"
        mode: '0644'
      with_items: "{{ shell_users }}"

    - name: Setup git name
      git_config:
        name: user.name
        scope: global
        value: "{{ item.name }}"
      with_items: "{{ shell_users }}"

    - name: Setup git user email
      git_config:
        name: user.email
        scope: global
        value: "{{ item.email }}"
      with_items: "{{ shell_users }}"

    
    - name: Install tmux and zsh
      package:
        name:
          - tmux
          - zsh
          - sudo
          - vim
          - fzf
        state: present

    ########################################################################
    # 2. Harden SSHD to allow only key-based authentication
    ########################################################################
    - name: Ensure SSH public key authentication is enforced
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication\s+'
        line: 'PasswordAuthentication no'
        state: present
      notify: Restart SSH

    - name: Ensure root login over SSH is disabled (optional but recommended)
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PermitRootLogin\s+'
        line: 'PermitRootLogin no'
        state: present
      notify: Restart SSH

  

    # 3.8. Automatic Updates, AIDE, etc. (Optional CIS steps from prior example)
    - name: Install unattended-upgrades
      package:
        name: unattended-upgrades
        state: present

    - name: Configure unattended-upgrades (enable security updates)
      lineinfile:
        path: /etc/apt/apt.conf.d/50unattended-upgrades
        regexp: '^//\s*"\${distro_id}:\${distro_codename}-security";'
        line: '        "${distro_id}:${distro_codename}-security";'
        state: present

    - name: Ensure unattended-upgrades is enabled
      lineinfile:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        regexp: '^APT::Periodic::Unattended-Upgrade\s+'
        line: 'APT::Periodic::Unattended-Upgrade "1";'
        create: yes
      notify: Update apt cache

    - name: Set APT to update package lists daily
      lineinfile:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        regexp: '^APT::Periodic::Update-Package-Lists\s+'
        line: 'APT::Periodic::Update-Package-Lists "1";'
        create: yes

    - name: Remove insecure packages
      package:
        name:
          - telnet
          - rsh-client
          - rsh-redone-client
          - rsh-server
          - tftp
        state: absent

  handlers:
    - name: Restart SSH
      service:
        name: ssh
        state: restarted

    - name: Update apt cache
      apt:
        update_cache: yes
